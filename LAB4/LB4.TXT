.LOG
Copyright (C) 2001-2011 by prof. B.M. Mirkin, Dr. N.M. Lychenko
All rights reserved.


ЛАБОРАТОРНАЯ РАБОТА N4

ОПТИМИЗАЦИЯ ФУНКЦИЙ КОНЕЧНОГО ЧИСЛА ПЕРЕМЕННЫХ:
типы стационарных точек; задачи без ограничений.

ОГЛАВЛЕНИЕ

1. НЕКОТОРЫЕ ОПЕРАТОРЫ МАТЛАБА, НЕОБХОДИМЫЕ ДЛЯ РЕШЕНИЯ 
   ЗАДАЧ ОПТИМИЗАЦИИ.
1.1 Операторы графики.
1.2 Операторы оптимизации.

2. ПРИМЕРЫ РЕШЕНИЯ ОПТИМИЗАЦИОННЫХ ЗАДАЧ

3. ЗАДАНИЯ К ЛАБОРАТОРНОЙ РАБОТЕ

	Оптимизация может быть определена как наука нахождения наилучших
в какомто смысле решений математически сформулированных задач, которые
зачастую являются моделями физической реальности. Она включает изучение
критериев оптимальности, определение алгоритмических методов решения, 
изучение структуры таких методов и компьютерных экспериментов с  ними
при различных условиях задач. Имеется громадное количество практических
применений оптимизационных методов.
	Целью лабораторной работы является освоение основных идей поиска
экстремума функций нескольких переменных и освоение на простых примерах
некоторых возможностей системы  MatLAB для решения оптимизационных задач.

1. НЕКОТОРЫЕ ОПЕРАТОРЫ МАТЛАБА, НЕОБХОДИМЫЕ ДЛЯ РЕШЕНИЯ ЗАДАЧ ОПТИМИЗАЦИИ.

1.1 Операторы графики.

Весьма полезным средством системы MatLAB часто используемым в задачах
оптимизации, является возможность построения линий равного уровня или
контурных линий для трехмерных поверхностей.
Построение линий равного уровня особенно полезно для многоэкстремальных
задач. 
	Эта возможность реализуется с помощъю операторов:

CONTOUR Оператор выводит на экран график линий равного уровня.
  	CONTOUR(Z) выводит на экран график линий равного уровня матрицы
        Z, где матрица Z содержит высоты точек 3-D поверхности.

  	CONTOUR(X,Y,Z) выводит на экран график линий равного уровня 
        матрицы Z, а векторы X и Y устанавливают лимиты осей X и Y.

  	CONTOUR(Z,N) и CONTOUR(X,Y,Z,N) выводит на экран график линий 
        равного уровня матрицы Z, при этом число N задает количество 
        контурных линий. 

  	CONTOUR(Z,V) и CONTOURC(X,Y,Z,V) выводит на экран график линий
        равного уровня матрицы Z, при этом на графике возле линий 
        выводятся числа, определяющие значения Z, задаваемые в векторе V.

  	CONTOUR(...,'linetype') выводит на экран график линий равного 
        уровня матрицы Z, при этом цвет и тип линий задается как и в 
        команде PLOT.
 
 	
CONTOUR3 выводит на экран 3-х мерный график линий равного уровня.

 	CONTOUR3(Z) выводит на экран 3-х мерный график линий равного 
        уровня матрицы Z.

 	CONTOUR3(Z,N) выводит на экран 3-х мерный график линий 
        равного уровня матрицы Z с числом линий N.
        По умолчанию N равно 10.

 	CONTOUR3(X,Y,Z) и CONTOUR3(X,Y,Z,N) используют X и Y для
        определения пределов по осям.
 	
 
CLABEL	маркирует линии равного уровня.
 	CLABEL(CS) добавляет метки высот к контурным линиям на графике
        используя структуру CS как выход стандартной программы CONTOUR.
 
 	CLABEL(CS,V) маркирует только контурные линии уровни которых
        задаются вектором V. По умолчанию маркируются все контурные
        линии.
 
 	CLABEL(CS,'manual') маркирует контурные линии вручную с помощъю
        мыши. Нажатие Enter прерывает маркировку.

QUIVER	Наносит стрелки на графики.

 	QUIVER(X,Y,DX,DY) наносит маленькие стрелки на любую пару (X,Y)
        в матрицах X и Y. (DX,DY) пары в матрицах DX и DY определяют
        направление и амплитуду стрелок.

Пример:
 	   xord = -2:.2:2;
 	   yord = -2:.2:2;
 	   [x,y] = meshgrid(xord,yord);
 	   z = x .* exp(-x.^2 - y.^2);
 	   [px,py] = gradient(z,.2,.2);
 	   contour(x,y,z),hold on, quiver(x,y,px,py), hold off

	Для построения 3-х мерных поверхностей служат операторы:
MESH, MESHC, MESHZ, SURF, SURFC, SURFL и другие. Опишем кратко
некоторые из них.

SURF	Оператор выводит на экран график 3-х мерной поверхности.
        
 	SURF(X,Y,Z,C) выводит цветной объомный график параметры
        которого определяются четырмя матричными аргументами.
        Точка наблюдения определяется оператором VIEW.
        Маркировка осей определяется диапазонами X, Y и Z,
        или установкой с помощью оператора AXIS. 

SURFC	Оператор выводит на экран комбинированный график 3-х 
        мерной поверхности и линий равного уровня.

 	SURFC(...) имеет такой же формат как и  SURF(...) 
        за исключением того, что под поверхностью еще выводит 
        линии равного уровня.

SURFL	Оператор выводит на экран график 3-х мерной поверхности
        с маркировкой высот от плоскости x-y.

 	SURFL(...) имеет такой же формат как и SURF(...) except that it draws the surface
 	за исключением того, что еще выводит метки высот над
        плоскостью x-y.

Проиллюстрируем использование введенных операторов на примере
построения 3-х мерной поверхности и ее линий равнго уровня.
Поверхность описывается уравнением
         J=sin(u1.^2-1) + sin(u2.^2-1)
и имеет пять экстремумов.

Script-file для этого примера будет иметь вид: 

clear;
clc;
xord=-2.2:.1:2.2;
uord=-2.2:.1:2.2;
[u1,u2] = meshgrid(xord,uord);
J=sin(u1.^2-1) + sin(u2.^2-1);
surfc(J);
title('This is a combination 3-D/contour plot of J=sin(u1.^2-1) + sin(u2.^2-1) ')
pause
contour(J,20);
title('This is a contour plot of 3-D surface "J=sin(u1.^2-1) + sin(u2.^2-1)" ');
pause
cm=contour(xord,uord,J,[-.01 -.3 -1 -5 -10 -20]); 
clabel(cm);
pause
clabel(cm,'manual');

Отметим несколько моментов:

1. Используется специальный вспомогательный оператор MESHGRID.
MESHGRID формирует специальные монжества X и Y для построения
3-х мерных графиков (элементы этих множеств служат базой
для формирования матрицы J).

[X,Y] = MESHGRID(x,y) трансформирует область, определяемую 
векторами x и y, в множества X и Y, которые могут быть 
использованы для вычисления функций двух переменных и 
построения 3-х мерных поверхностей.
Строки выходного множества X являются копиями вектора x, а
столбцы выходного множества Y являются копиями вектора y.
Например, для построения поверхности функции z двух 
переменных x и y
             z = x*exp(-x^2-y^2) 
в диапазонах 
            -2 < x < 2,  -2 < y < 2,
необходимо использовать оператор MESHGRID следующим образом:

		[X,Y] = meshgrid(-2:.2:2, -2:.2:2);
		Z = X .* exp(-X.^2 - Y.^2);
		surf(Z)
2. Оператор surfc(J) порождает на одном графике поверхность 
и линии равного уровня.

3. Оператор contour(J,20) порождает 20 линий равного уровня.

4. Операторы 
           cm=contour(xord,uord,J,[.1 .3 1 5 10 20]); 
           clabel(cm); 
пораждают 6 линий равного уровня с метками, 0.1, 0.3, 1,
5, 10, 20, которые являются значениями J, соответствующими
этим линиям.

5. Оператор clabel(cm,'manual') позволяет разместить эти 
метки вручную с помощью мыши.

  
1.2 Операторы оптимизации.

FMINUnc	Оператор предназначен для нахождения минимума функции
        нескольких переменных.

x = fminunc(fun,x0)
x = fminunc(fun,x0,options)
x = fminunc(fun,x0,options,P1,P2,...)
[x,fval] = fminunc(...)

•	fminunc находит минимум скалярной функции нескольких переменных, стартуя с некоторой начальной точки. 
В общем, задача относится к нелинейной оптимизации без ограничений

•	x = fminunc(fun,x0) начинает с точки x0 и находит локальный минимум от х для описанной в fun функции. 
x0 может быть скаляром, вектором или матрицей.

•	x = fminunc(fun,x0,options) минимизирует с параметрами оптимизации, определенными в структурной опции.

•	x = fminunc(fun,x0,options,P1,P2,...) передает зависимые от задачи параметры P1, P2 и т.д. 
непосредственно в функцию fun. Передается пустая матрица в случае опции по использованию значений по умолчанию

•	[x,fval] = fminunc(...) возвращает в fval значение целевой функции fun как решение от x.

Более подробно см. файл Задачи без ограничений.doc в папке LAB2.
 	
2. ПРИМЕРЫ РЕШЕНИЯ ОПТИМИЗАЦИОННЫХ ЗАДАЧ

	Пусть задана функция J двух переменных u1 и u2
             
              J = .5(u1^2 + u2^2).

Требуется определить тип и координаты стационарной точки, 
а также построить линии равного уровня в координатах u1,u2 
и поверхность в координатах u1,u2,J.
	Из необходимых условий dJ/du1=0, dJ/du2=0 определяем,
что функции J имеет стационарную точку 
              [u10, u20] = [0, 0].
Матрица вторых производных функции J (Гессиан) будет равна
еденичной матрице, и, следовательно, квадратичная форма J
является положительно-определенной, а стационарная точка
является точкой минимума.
	Для построения линий равного уровня и поверхности 
критерия зададим script file в виде:

clear;
clc;
xord=-2.2:.1:2.2;  %интервал изменения u1;
uord=-2.2:.1:2.2;  %интервал изменения u2;
[u1,u2] = meshgrid(xord,uord);

J=u1.^2 + u2.^2;  %критерий.
contour(J,6);  %задаем 6 линий. 
pause
cm=contour(xord,uord,J,[.01 .3 1 5 ]); %задаем 4 линии с метками,
clabel(cm);                  %определяющими значения критерия.
pause
cm=contour(xord,uord,J,3);% задаем 3 линии с возможностью наносить
clabel(cm,'manual');      % метки с помощью мыши.
pause
surfc(J); %выводим комбинированный график 3-х мерной поверхности
          %критерия с контурными линиями.

Воспользуемся теперь для нахождения экстремальной точки средствами
Матлаба. 
Script file имеет вид:

clc
x0=[100,100]; % задание начального приближения.
[x,fval]=fminunc('x(1)^2 + x(2)^2',x0);
x %найденное решение.
fval %Найденное значение критерия.

Отметим здесь, что выражение для критерия записано
прямо в строку с переменными x для избежания написания
М-файла. Иначе необходимо вначале создать М-файл:
например:

function j = opt(u);
r1=1;r2=1;
j=r1*u(1)^2 +r2*u(2)^2;

а затем написать script-file

clc
u0=[100,100]; % задание начального приближения.
[u,fval]=fminunc('opt',u0);
u    %найденное решение.
fval %Найденное значение критерия.

 

3. ЗАДАНИЯ К ЛАБОРАТОРНОЙ РАБОТЕ

(Задания 1-3).
Для квадратичной критериальной функции двух переменных u1,u2

         J = r1*u1^2 + 2*(r1*a1+r3*a2)*u1 + 2*r3*u1*u2 
           + 2*(r3*a1+r2*a2)*u2+r2*u2^2 + r1*a1^2  
           + 2*r3*a1*a2 + r2*a2^2,

где параметры r1,r2,r3,a1,a2 определены в индувидиальных заданиях,
1) Аналитически определить координаты и тип стационарных точек;
2) Построить для каждого задания 2 графика линий равного уровня:
   a) с заданным их количеством (количество линий равно
      номеру варианта плюс 2);
   b) c заданным количеством (3) и нанесением меток значения
      критерия им соответствующего;
3) Для каждого задания построить на одном графике 3-х мерную
   поверхность и линии равного уровня.
4) Для каждого задания  найти экстремальные точки численно 
   с помощью средств Матлаба.
5) При нахождении численного решения исследовать влияние
   начальных условий на скорость сходимости.

Результаты оформить в виде М-файлов  с  представлением hard копий отчета о 
лабораторной работе.
    



13:03 10.03.2012

12:26 14.04.2012

12:59 25.09.2014
